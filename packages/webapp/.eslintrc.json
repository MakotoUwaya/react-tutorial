{
  "extends": [
    "../../.eslintrc.root.json",
    "react-app",
    "react-app/jest"
  ],
  "env": {
    "es6": true,
    "jest": true
  },
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [
          ".ts",
          ".tsx",
          ".js",
          ".jsx"
        ],
        "moduleDirectory": [
          "src"
        ]
      }
    }
  },
  "rules": {
    "no-console": "warn",
    "no-unused-vars": "off",
    "@typescript-eslint/ban-types": "warn",
    "@typescript-eslint/no-redeclare": "off",
    "@typescript-eslint/no-unused-vars": [
      "warn",
      {
        "vars": "all",
        "varsIgnorePattern": "^_",
        "args": "after-used",
        "argsIgnorePattern": "^_"
      }
    ],
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "default",
        "format": [
          "camelCase"
        ],
        "leadingUnderscore": "allow",
        "trailingUnderscore": "allow",
        "filter": {
          "regex": "Service-Worker",
          "match": false
        }
      },
      {
        "selector": "variable",
        "format": [
          "camelCase",
          "PascalCase",
          "UPPER_CASE"
        ],
        "leadingUnderscore": "allow",
        "trailingUnderscore": "allow"
      },
      {
        "selector": "typeLike",
        "format": [
          "PascalCase"
        ]
      },
      {
        "selector": "property",
        "format": [
          "camelCase",
          "snake_case"
        ],
        "filter": {
          "regex": "Service-Worker",
          "match": false
        }
      }
    ],
    "unused-imports/no-unused-imports-ts": "error",
    "react/jsx-curly-brace-presence": [
      "warn",
      {
        "props": "never",
        "children": "never"
      }
    ],
    "react/jsx-key": [
      "error",
      {
        "checkFragmentShorthand": true
      }
    ],
    "react-hooks/exhaustive-deps": [
      "error",
      {
        "additionalHooks": "(useAsync)"
      }
    ],
    "react/jsx-pascal-case": [
      "error"
    ],
    "react/jsx-uses-react": "off",
    "react/react-in-jsx-scope": "off"
  },
  "overrides": [
    {
      "files": [
        "*.{test,d}.ts"
      ],
      "rules": {
        "@typescript-eslint/no-unused-vars": "off",
        "@typescript-eslint/no-use-before-define": "off",
        "unused-imports/no-unused-imports-ts": "off",
        "unused-imports/no-unused-vars-ts": "off"
      }
    }
  ]
}